@using BE
@{
    var usuarioSession = (SessionModel)Session[Resources.Constante.SessionUsuario];
}
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <!-- Tell the browser to be responsive to screen width -->
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <!-- Favicon icon -->
    <link rel="icon" type="image/png" sizes="16x16" href="~/assets/images/favicon_SALUS.ico">
    <title>Sigesoft2020</title>
    <!-- Bootstrap Core CSS -->
    <link href="~/assets/plugins/bootstrap/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.13.1/css/bootstrap-select.css" />
    <link href="~/assets/plugins/perfect-scrollbar/css/perfect-scrollbar.css" rel="stylesheet">
    <!--c3 CSS -->
    <link href="~/assets/plugins/c3-master/c3.min.css" rel="stylesheet">
    <!-- Custom CSS -->
    <link href="~/assets/css/style.css" rel="stylesheet">
    <link href="~/Content/custom.css" rel="stylesheet">

    <link href="~/Content/Jquery-ui.css" rel="stylesheet" />
    <link href="~/assets/plugins/bootstrap-material-datetimepicker/css/bootstrap-material-datetimepicker.css" rel="stylesheet">
    <!-- Page plugins css -->
    <link href="~/assets/plugins/clockpicker/dist/jquery-clockpicker.min.css" rel="stylesheet">
    <!-- Color picker plugins css -->
    <link href="~/assets/plugins/jquery-asColorPicker-master/css/asColorPicker.css" rel="stylesheet">
    <!-- Date picker plugins css -->
    <link href="~/assets/plugins/bootstrap-datepicker/bootstrap-datepicker.min.css" rel="stylesheet" type="text/css" />
    <!-- Daterange picker plugins css -->
    <link href="~/assets/plugins/timepicker/bootstrap-timepicker.min.css" rel="stylesheet">
    <link href="~/assets/plugins/bootstrap-daterangepicker/daterangepicker.css" rel="stylesheet">

    <link rel="manifest" href="~/manifest.json">

    <!-- You can change the theme colors from here -->
    <link href="~/assets/css/colors/default-dark.css" id="theme" rel="stylesheet">
    <link href="~/assets/plugins/sweetalert/sweetalert.css" rel="stylesheet" type="text/css">
    <link href="~/Content/common.css" rel="stylesheet" />
    @*@Styles.Render("~/Content/css")
        @Scripts.Render("~/bundles/modernizr")*@
    <script type="text/javascript">
        var baseUrl = "@Url.Content("~")";
        var baseUrlLoader = "@Url.Content("~/images/ajax-loader.gif")";
    </script>
    <style type="text/css">

        .sidebar-nav > ul > li.active > a {
            color: #ffffff;
        }

        .sidebar-nav ul li a {
            color: #ffffff;
            text-align: left;
        }

            .sidebar-nav ul li a.active {
                color: #ffffff;
            }

            .sidebar-nav ul li a:hover {
                color: #2e548f;
                background: #ffffff;
            }

        .sidebar-nav > ul > li > a.has-arrow::after:hover {
            color: #2e548f;
        }

        .sidebar-nav ul li a:hover i {
            color: #2e548f;
        }

        .sidebar-nav > ul > li > a.active {
            background: #2e548f;
        }

        .sidebar-nav > ul > li.active > a i {
            color: #2e548f;
        }

        .sidebar-nav > ul > li.active > a.has-arrow::after {
            border-width: 3px 0 0 3px;
            border-style: solid;
            border-color: #2e548f;
        }

        .btn {
            border: 1px solid transparent;
        }

        .btn-outline-secondary {
            background-color: #2e548f;
            box-shadow: none;
            margin-top: 10px;
        }

            .btn-outline-secondary.active, .btn-outline-secondary:active, .show > .btn-outline-secondary.dropdown-toggle {
                background-color: #2e548f;
                border-color: #fdfeff;
                box-shadow: -4px 3px 0px 0px rgb(255, 255, 255);
            }

            .btn-outline-secondary:hover {
                color: #2e548f;
                background-color: #ffffff !important;
                border-color: #acc3dd;
            }

        .sidebar-nav .has-arrow::after {
            border-width: 3px 0 0 3px;
            border-style: solid;
            border-color: #ffffff;
        }

        .sidebar-nav > ul > li > a i {
            color: #ffffff;
        }

        .sidebar-nav > ul > li.active > .borderli {
            /*border-color: white !important;
                border: solid;
                border-right: none;
                border-left: none;*/
            color: #2e548f;
            background-color: #ffffff;
            border-color: #acc3dd;
            border-radius: 5px;
        }
    </style>
    <link href="~/Content/spin.css" rel="stylesheet" />
    @RenderSection("Styles", false)
</head>
<body class="fix-header fix-sidebar card-no-border">
    <!-- ============================================================== -->
    <!-- Preloader - style you can find in spinners.css -->
    <!-- ============================================================== -->
    <div class="preloader">
        <div class="loader">
            <div class="loader__figure"></div>
            <p class="loader__label">Cargando Sigesoft</p>
        </div>
    </div>
    <!-- ============================================================== -->
    <!-- Main wrapper - style you can find in pages.scss -->
    <!-- ============================================================== -->
    <div id="main-wrapper">
        <!-- ============================================================== -->
        <!-- Topbar header - style you can find in pages.scss -->
        <!-- ============================================================== -->
        <header class="topbar">
            <nav class="navbar top-navbar navbar-expand-md navbar-light">
                <!-- ============================================================== -->
                <!-- Logo -->
                <!-- ============================================================== -->
                <div class="navbar-header">
                    <a class="navbar-brand" href="index.html">
                        <!-- Logo icon --><b>
                            <!--You can put here icon as well // <i class="wi wi-sunset"></i> //-->
                            <!-- Dark Logo icon -->
                            <img src="~/assets/images/Isotipo SalusLaboris.png" style="width:50px;" alt="homepage" class="dark-logo" />
                            <!-- Light Logo icon -->
                            <img src="~/assets/images/Isotipo SalusLaboris.png" style="width:50px;" alt="homepage" class="light-logo" />
                        </b>
                        <!--End Logo icon -->
                        <!-- Logo text --><span>
                            <!-- dark Logo text -->
                            <img src="~/assets/images/letras.png" alt="homepage" style="width:160px;" class="dark-logo" />
                            <!-- Light Logo text -->
                            <img src="~/assets/images/letras.png" class="light-logo" style="width: 160px;" alt="homepage" />
                        </span>
                    </a>
                </div>
                <!-- ============================================================== -->
                <!-- End Logo -->
                <!-- ============================================================== -->
                <div class="navbar-collapse" style="padding-left: 0px;">
                    <!-- ============================================================== -->
                    <!-- toggle and nav items -->
                    <!-- ============================================================== -->
                    <ul class="navbar-nav mr-auto">
                        <!-- This is  -->
                        <li class="nav-item"> <a class="nav-link nav-toggler hidden-md-up waves-effect waves-dark" href="javascript:void(0)"><i class="ti-menu"></i></a> </li>
                        <li class="nav-item"> <a class="nav-link sidebartoggler hidden-sm-down waves-effect waves-dark" href="javascript:void(0)"><i class="ti-menu"></i></a> </li>

                    </ul>
                    <!-- ============================================================== -->
                    <!-- User profile and search -->
                    <!-- ============================================================== -->
                    <ul class="navbar-nav my-lg-0">
                        <li class="nav-item dropdown" id="li-notification" hidden>
                            <a class="nav-link dropdown-toggle waves-effect waves-dark" href="" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                <i class="mdi mdi-message"></i>
                            </a>
                        </li>
                        <!-- ============================================================== -->
                        <!-- Profile -->
                        <!-- ============================================================== -->
                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle waves-effect waves-dark" href="" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><img src="~/assets/images/users/1.jpg" alt="user" class="profile-pic" /></a>
                            <div class="dropdown-menu dropdown-menu-right animated flipInY">
                                <ul class="dropdown-user">
                                    <li>
                                        <div class="dw-user-box">
                                            <div class="u-img"><img src="~/assets/images/users/1.jpg" alt="user"></div>
                                            <div class="u-text">
                                                <h5 id="username">@usuarioSession.UserName</h5>
                                            </div>
                                        </div>
                                    </li>
                                    <li role="separator" class="divider"></li>
                                    <li><a href="#"><i class="ti-user"></i> Mi Perfil</a></li>
                                    <li><a href="#"><i class="ti-calendar"></i> Mi Agenda</a></li>
                                    <li role="separator" class="divider"></li>
                                    <li><a href="#" onclick="openModal()"><i class="ti-settings"></i> Configuración de cuenta</a></li>
                                    <li role="separator" class="divider"></li>

                                    <li><a href="javascript:;" onclick="CerrarSesion();"><i class="fa fa-power-off"></i> Logout</a></li>
                                </ul>
                            </div>
                        </li>
                    </ul>
                </div>
            </nav>
        </header>
        <!-- ============================================================== -->
        <!-- End Topbar header -->
        <!-- ============================================================== -->
        <!-- ============================================================== -->
        <!-- Left Sidebar - style you can find in sidebar.scss  -->
        <!-- ============================================================== -->
        <aside class="left-sidebar">
            <!-- Sidebar scroll-->
            <div class="scroll-sidebar">
                <!-- Sidebar navigation-->
                <nav class="sidebar-nav pt-1">
                    <ul id="sidebarnav">
                        @*<li class="nav-small-cap">PERSONAL</li>*@
                        @*<li class="active">
                                <a class="has-arrow waves-effect waves-dark borderli" href="#" aria-expanded="false"><i class="mdi mdi-gauge"></i><span class="hide-menu">Comercial</span></a>
                                <ul aria-expanded="true" class="collapse">
                                    <li>
                                        <a class="btn waves-effect waves-light btn-sm btn-outline-secondary" style="width:90%;" href="@Url.Content("~/Company/Index")">Empresas</a>
                                    </li>
                                    <li>
                                        <a class="btn waves-effect waves-light btn-sm btn-outline-secondary" style="width:90%;" href="@Url.Content("~/Quotation/Register/0")">Nueva Cotización</a>
                                    </li>
                                    <li>
                                        <a class="btn waves-effect waves-light btn-sm btn-outline-secondary" style="width:90%;" href="@Url.Content("~/Quotation/Index")">Matriz de Seguimiento</a>
                                    </li>
                                </ul>
                            </li>*@
                    </ul>
                </nav>
                <!-- End Sidebar navigation -->
            </div>
            <!-- End Sidebar scroll-->
        </aside>
        <!-- ============================================================== -->
        <!-- End Left Sidebar - style you can find in sidebar.scss  -->
        <!-- ============================================================== -->
        <!-- ============================================================== -->
        <!-- Page wrapper  -->
        <!-- ============================================================== -->
        <div class="page-wrapper">
            <!-- ============================================================== -->
            <!-- Container fluid  -->
            <!-- ============================================================== -->
            <div class="container-fluid r-aside p-2">
                @RenderBody()
            </div>
            <!-- ============================================================== -->
            <!-- End Container fluid  -->
            <!-- ============================================================== -->
            <!-- ============================================================== -->
            <!-- footer -->
            <!-- ============================================================== -->
            <footer class="footer"> © 2020 Admin Sigesoft </footer>
            <!-- ============================================================== -->
            <!-- End footer -->
            <!-- ============================================================== -->
        </div>
        <!-- ============================================================== -->
        <!-- End Page wrapper  -->
        <!-- ============================================================== -->
    </div>
    <!-- ============================================================== -->
    <!-- End Wrapper -->
    <!-- ============================================================== -->
    <!-- ============================================================== -->
    <!-- All Jquery -->
    <!-- ============================================================== -->

    <div class="modal fade" id="AccountSettingModal" tabindex="-1" role="dialog" aria-labelledby="AccountSettingModalLabel1">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="exampleModalLabel1">Configuración de Cuenta</h4>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                </div>

                <div class="modal-body" style="font-size:10px;">
                    <div class="col-12 col-md-6 col-lg-6 col-xlg-6">
                        <div class="card card-body">
                            <div class="row">
                                <div class="col-12">
                                    <h3 class="box-title m-b-0">Empresa y Rol</h3>
                                    <div class="form-group col">
                                        <label>Empresa</label>
                                        <select class="form-control form-white select-Service" data-placeholder="Seleccione una empresa..." id="ddlConfCompany">
                                            <option value="-1">--Seleccionar--</option>
                                            @foreach (var comp in usuarioSession.Companies)
                                            {
                                                <option value="@comp.CompanyId">@comp.CompanyName</option>
                                            }
                                        </select>
                                    </div>
                                    <div class="form-group col">
                                        <label>Rol</label>
                                        <select class="form-control form-white select-Service" data-placeholder="Seleccione un Rol..." id="ddlConfRole">
                                            <option value="-1">--Seleccionar--</option>
                                        </select>
                                    </div>
                                    <div class="col">
                                        <div>

                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-12 col-md-6 col-lg-6 col-xlg-6">
                        <div class="card card-body">
                            <div class="row">
                                <div class="col-12">
                                    <h3 class="box-title m-b-0">Notificaciones</h3> <small></small>
                                    <div class="col">
                                        <input type="checkbox" id="chkNotification" name="chkNotification">
                                        <label for="chkNotification">Recibir Notificaciones</label>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button onclick="SaveConfig()" type="button" class="btn btn-info" data-dismiss="modal">Guardar Configuración</button>
                </div>
            </div>
        </div>
    </div>

    <div id="loading">
        <div id="loadingcontent">
            <p id="loadingspinner">
                Searching things...
            </p>
        </div>
    </div>

    <script src="~/assets/plugins/jquery/jquery.min.js"></script>

    <script src="~/Scripts/jquery-ui.js"></script>
    <!-- Bootstrap popper Core JavaScript -->
    <script src="~/assets/plugins/bootstrap/js/popper.min.js"></script>
    <script src="~/assets/plugins/bootstrap/js/bootstrap.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.12.2/js/bootstrap-select.min.js"></script>
    <!-- slimscrollbar scrollbar JavaScript -->
    <script src="~/assets/js/perfect-scrollbar.jquery.min.js"></script>
    <!--Wave Effects -->
    <script src="~/assets/js/waves.js"></script>
    <!--Menu sidebar -->
    <script src="~/assets/js/sidebarmenu.js"></script>
    <!--Custom JavaScript -->
    <script src="~/assets/js/custom.js"></script>
    <!-- This is data table -->
    <script src="~/assets/plugins/datatables/jquery.dataTables.min.js"></script>
    <script src="~/assets/plugins/sweetalert/sweetalert.min.js"></script>
    <script src="~/assets/plugins/sweetalert/jquery.sweet-alert.custom.js"></script>
    <script src="~/Scripts/utils.js"></script>
    <script src="~/Scripts/moment.js"></script>
    <script src="~/Scripts/moment-with-locales.js"></script>
    <!-- This is highcharts -->
    <script src="~/assets/plugins/Highcharts/highcharts.js"></script>
    <script src="~/assets/plugins/Highcharts/modules/series-label.js"></script>
    <script src="~/assets/plugins/Highcharts/modules/exporting.js"></script>
    <script src="~/assets/plugins/Highcharts/modules/export-data.js"></script>
    <!-- Treeview Plugin JavaScript -->
    <script src="~/assets/plugins/bootstrap-treeview-master/dist/bootstrap-treeview.min.js"></script>
    <script src="~/Scripts/jquery.validate.js"></script>
    <script src="~/Scripts/jquery.loading.js"></script>
    <script src="~/Scripts/layout.js"></script>
    <script src="~/Scripts/dashboardWorker.js"></script>
    <script src="~/Scripts/WorkerValidation.js"></script>
    @*<script src="~/Scripts/spin.js"></script>*@
    <script type="text/javascript">
        var timer = '@FormsAuthentication.Timeout.TotalSeconds';
        var SessionTimeout = '@ViewBag.SessionTimeout';
        var userId = '@usuarioSession.SystemUserId'
    </script>

    <script type="text/javascript" src="~/Scripts/Export/html2pdf.bundle.min.js"></script>

    <script type="text/javascript">



        function CerrarSesion() {
            location.href = baseUrl() + 'IngresoSistema/LogOff';
        }



    </script>
    <script src="~/Scripts/APIController.js"></script>
    <script>
        var swReg;
        var objData = {};
        swEnabled();
        $(document).ready(function () {

            $(document).ajaxStart(ShowLoading());
            $(document).ajaxStop(CloseLoading());

            APIController.GetAccessUser().then((res) => {
                objData = res;
                ddlConfCompanyChange();
                VerifyDefaultCompany();
            });

            $('#chkNotification').change(function (event) {
                if (event.target.checked) {
                    if (!swReg) return console.log("No hay registro de SW");

                    APIController.GetKeyPublic().then((res) => {
                        let key = urlBase64ToUint8Array(res.Data);
                        swReg.pushManager
                            .subscribe({
                                userVisibleOnly: true,
                                applicationServerKey: key
                            })
                            .then(res => {
                                return res.toJSON();
                            })
                            .then(suscription => {
                                APIController.SaveSuscription({ "Body": JSON.stringify(suscription) }).then(verifySubscription);
                            })
                            .catch(error => {
                                console.log("error", error.message);
                            });
                    });
                } else {
                    $("#li-notification").attr("hidden", true);
                }
            });
        });

        function enableNotificationsIcon() {
            $("#li-notification").removeAttr('hidden');
        }

        function ddlConfCompanyChange() {
            $('#ddlConfCompany').change(function () {
                var id = $("#ddlConfCompany option:selected").val();
                let content = "";
                let company = objData.Companies.filter((rep) => {
                    return rep.CompanyId == id;
                });
                let roles = company[0].Roles;
                for (const index in roles) {
                    content += "<option value='" + roles[index].RolId + "'>" + roles[index].RolName + "</option>";
                }
                $("#ddlConfRole").empty();
                $("#ddlConfRole").append(content);
            });
        }

        function openModal() {
            $("#AccountSettingModal").modal("show");
        }

        function VerifyDefaultCompany() {
            let username = $("#username").html();

            if (localStorage.getItem('configdefault' + username) == null) {
                APIController.GetAccountSettingBySystemUserId().then((resp) => {
                    let data = resp.Data;

                    if (data == null) {
                        $("#AccountSettingModal").modal("show");
                    } else {
                        $('#ddlConfCompany').val(data.OwnerCompanyId).trigger('change');
                        $("#ddlConfRole").val(data.RoleId);
                        buildSideBar({
                            "OwnerCompanyId": data.OwnerCompanyId,
                            "RoleId": data.RoleId,
                        });
                        buildContenFluid({
                            "RoleId": data.RoleId,
                        });
                        SaveConfigAccountCache();
                    }
                });
            } else {
                let obj = JSON.parse(localStorage.getItem('configdefault' + username));
                $('#ddlConfCompany').val(obj.OwnerCompanyId);
                $('#ddlConfCompany').val(obj.OwnerCompanyId).trigger('change');
                $("#ddlConfRole").val(obj.RoleId);
                buildSideBar(obj);
                buildContenFluid(obj);
            }
        }

        function SaveConfigAccountCache() {
            let username = $("#username").html();
            obj = {
                "OwnerCompanyId": $("#ddlConfCompany option:selected").val(),
                "RoleId": $("#ddlConfRole option:selected").val(),
            }
            localStorage.setItem('configdefault' + username, JSON.stringify(obj));
        }

        function SaveConfig() {
            let username = $("#username").html();
            let data = {
                OwnerCompanyId: $("#ddlConfCompany option:selected").val(),
                RoleId: $("#ddlConfRole option:selected").val()
            }

            if (localStorage.getItem('configdefault' + username) == null) {
                APIController.SaveAccountSetting(data).then((res) => {
                    buildSideBar(data);
                    buildContenFluid(data);
                });
            } else {
                APIController.UpdateAccountSetting(data).then((res) => {
                    SaveConfigAccountCache();
                    buildSideBar(data);
                    buildContenFluid(data);
                });
            }
        }

        function buildContenFluid(config) {
            console.log('buildContenFluid - ' + config.RoleId);
            if (config.RoleId == ROLE_SISTEMAS) {
                renderDashboardSystem();
            } else if (config.RoleId == ROLE_MEDICO) {
                renderDashboardDoctor();
            } else if (config.RoleId == ROLE_RECEPCION) {
                renderDashboardReservationDesk();
            } else if (config.RoleId == ROLE_GERENCIA) {
                renderDashboardManagement();
            } else if (config.RoleId == ROLE_COMERCIAL) {
                renderDashboardCommercial();
            } else if (config.RoleId == ROLE_ADMNISTRADOR) {
                renderDashboardAdministrator();
            } else if (config.RoleId == ROLE_CLIENTE) {
                renderDashboardCustomer();
            } else if (config.RoleId == ROLE_TRABAJADOR) {
                DashboardWorker();
            }
        }

        function buildSideBar(obj) {
            
            let company = objData.Companies.filter((res) => {
                return res.CompanyId == obj.OwnerCompanyId;
            });

            let roles = company[0].Roles.filter((res) => {
                return res.RolId == obj.RoleId
            });

            let modules = roles[0].Modules;

            let content = "";
            for (var i = 0; i < modules.length; i++) {
                content += "<li>";
                content += "<a class='has-arrow waves-effect waves-dark borderli' href='#' aria-expanded='false'><i class='mdi mdi-gauge'></i><span class='hide-menu'>" + modules[i].ModuleName + "</span></a>";
                content += "<ul aria-expanded='true' >";
                for (var ii = 0; ii < modules[i].Options.length; ii++) {
                    content += "<li>";

                    content += "<a class='btn waves-effect waves-light btn-sm btn-outline-secondary' style='width:90%; text-aling:left' href='" + baseUrl() + modules[i].Options[ii].Path + "'>" + modules[i].Options[ii].OptionName + "</a>";
                    content += "</li>";
                }

                content += "</ul>";
                content += "</li>";

            }
            //$(".container-fluid").empty();
            $("#sidebarnav").empty();
            $("#sidebarnav").append(content);
        }

        function swEnabled() {
            if (navigator.serviceWorker) {
                window.addEventListener("load", function () {
                    navigator.serviceWorker.register("/sw.js").then(function (reg) {
                        swReg = reg;
                        swReg.pushManager.getSubscription().then(verifySubscription);
                    });
                });
            }
        }

        function verifySubscription(activated) {
            if (activated) {
                $('#chkNotification').prop("checked", true);
                $("#li-notification").removeAttr('hidden');
            } else {
                $('#chkNotification').prop("checked", false);
                $("#li-notification").attr("hidden", true);
            }
        }


        function renderDashboardSystem() {
            $(".container-fluid").empty();
            let content = "";

            content += "<div class='row p-2'>";
            content += "<h1>Dashboard de System</h1>";
            content += "</div>";

            $(".container-fluid").append(content);
        }

        function renderDashboardDoctor() {
            $(".container-fluid").empty();
            let content = "";

            content += "<div class='row p-2'>";
            content += "<h1>Dashboard de Doctor</h1>";
            content += "</div>";

            $(".container-fluid").append(content);
        }

        function renderDashboardReservationDesk() {
            $(".container-fluid").empty();
            let content = "";

            content += "<div class='row p-2'>";
            content += "<h1>Dashboard de Reservation Desk</h1>";
            content += "</div>";

            $(".container-fluid").append(content);
        }

        function renderDashboardManagement() {
            $(".container-fluid").empty();
            let content = "";

            content += "<div class='row p-2'>";
            content += "<h1>Dashboard de Management</h1>";
            content += "</div>";

            $(".container-fluid").append(content);
        }

        function renderDashboardCommercial() {
            $(".container-fluid").empty();
            let content = "";

            content += "<div class='row'>";
            content += "<div id='chart1' class='col-12'></div>";
            content += "</div>";

            content += "<div class='row p-4'>";
            content += "<div id='chart2' class='col-md-6'>";

            content += "</div>";
            content += "<div id='chart3' class='col-md-6'>";

            content += "</div>";

            content += "</div>";

            content += "<div class='row p-4'>";
            content += "<div id='chart4' class='col-md-6'>";

            content += "</div>";
            content += "</div>";

            $(".container-fluid").append(content);

            Highcharts.chart('chart1', {

                title: {
                    text: 'Solar Employment Growth by Sector, 2010-2016'
                },

                subtitle: {
                    text: 'Source: thesolarfoundation.com'
                },

                yAxis: {
                    title: {
                        text: 'Number of Employees'
                    }
                },
                legend: {
                    layout: 'vertical',
                    align: 'right',
                    verticalAlign: 'middle'
                },

                plotOptions: {
                    series: {
                        label: {
                            connectorAllowed: false
                        },
                        pointStart: 2010
                    }
                },

                series: [{
                    name: 'Installation',
                    data: [43934, 52503, 57177, 69658, 97031, 119931, 137133, 154175]
                }, {
                    name: 'Manufacturing',
                    data: [24916, 24064, 29742, 29851, 32490, 30282, 38121, 40434]
                }, {
                    name: 'Sales & Distribution',
                    data: [11744, 17722, 16005, 19771, 20185, 24377, 32147, 39387]
                }, {
                    name: 'Project Development',
                    data: [null, null, 7988, 12169, 15112, 22452, 34400, 34227]
                }, {
                    name: 'Other',
                    data: [12908, 5948, 8105, 11248, 8989, 11816, 18274, 18111]
                }],

                responsive: {
                    rules: [{
                        condition: {
                            maxWidth: 500
                        },
                        chartOptions: {
                            legend: {
                                layout: 'horizontal',
                                align: 'center',
                                verticalAlign: 'bottom'
                            }
                        }
                    }]
                }

            });

            Highcharts.chart('chart2', {
                title: {
                    text: 'Combination chart'
                },
                xAxis: {
                    categories: ['Apples', 'Oranges', 'Pears', 'Bananas', 'Plums']
                },
                labels: {
                    items: [{
                        html: 'Total fruit consumption',
                        style: {
                            left: '50px',
                            top: '18px',
                            color: ( // theme
                                Highcharts.defaultOptions.title.style &&
                                Highcharts.defaultOptions.title.style.color
                            ) || 'black'
                        }
                    }]
                },
                series: [{
                    type: 'column',
                    name: 'Jane',
                    data: [3, 2, 1, 3, 4]
                }, {
                    type: 'column',
                    name: 'John',
                    data: [2, 3, 5, 7, 6]
                }, {
                    type: 'column',
                    name: 'Joe',
                    data: [4, 3, 3, 9, 0]
                }, {
                    type: 'spline',
                    name: 'Average',
                    data: [3, 2.67, 3, 6.33, 3.33],
                    marker: {
                        lineWidth: 2,
                        lineColor: Highcharts.getOptions().colors[3],
                        fillColor: 'white'
                    }
                }, {
                    type: 'pie',
                    name: 'Total consumption',
                    data: [{
                        name: 'Jane',
                        y: 13,
                        color: Highcharts.getOptions().colors[0] // Jane's color
                    }, {
                        name: 'John',
                        y: 23,
                        color: Highcharts.getOptions().colors[1] // John's color
                    }, {
                        name: 'Joe',
                        y: 19,
                        color: Highcharts.getOptions().colors[2] // Joe's color
                    }],
                    center: [100, 80],
                    size: 100,
                    showInLegend: false,
                    dataLabels: {
                        enabled: false
                    }
                }]
            });

            Highcharts.chart('chart3', {
                chart: {
                    type: 'area'
                },
                title: {
                    text: 'Historic and Estimated Worldwide Population Growth by Region'
                },
                subtitle: {
                    text: 'Source: Wikipedia.org'
                },
                xAxis: {
                    categories: ['1750', '1800', '1850', '1900', '1950', '1999', '2050'],
                    tickmarkPlacement: 'on',
                    title: {
                        enabled: false
                    }
                },
                yAxis: {
                    title: {
                        text: 'Billions'
                    },
                    labels: {
                        formatter: function () {
                            return this.value / 1000;
                        }
                    }
                },
                tooltip: {
                    split: true,
                    valueSuffix: ' millions'
                },
                plotOptions: {
                    area: {
                        stacking: 'normal',
                        lineColor: '#666666',
                        lineWidth: 1,
                        marker: {
                            lineWidth: 1,
                            lineColor: '#666666'
                        }
                    }
                },
                series: [{
                    name: 'Asia',
                    data: [502, 635, 809, 947, 1402, 3634, 5268]
                }, {
                    name: 'Africa',
                    data: [106, 107, 111, 133, 221, 767, 1766]
                }, {
                    name: 'Europe',
                    data: [163, 203, 276, 408, 547, 729, 628]
                }, {
                    name: 'America',
                    data: [18, 31, 54, 156, 339, 818, 1201]
                }, {
                    name: 'Oceania',
                    data: [2, 2, 2, 6, 13, 30, 46]
                }]
            });

            Highcharts.chart('chart4', {
                chart: {
                    type: 'column',
                    options3d: {
                        enabled: true,
                        alpha: 15,
                        beta: 15,
                        viewDistance: 25,
                        depth: 40
                    }
                },

                title: {
                    text: 'Total fruit consumption, grouped by gender'
                },

                xAxis: {
                    categories: ['Apples', 'Oranges', 'Pears', 'Grapes', 'Bananas'],
                    labels: {
                        skew3d: true,
                        style: {
                            fontSize: '16px'
                        }
                    }
                },

                yAxis: {
                    allowDecimals: false,
                    min: 0,
                    title: {
                        text: 'Number of fruits',
                        skew3d: true
                    }
                },

                tooltip: {
                    headerFormat: '<b>{point.key}</b><br>',
                    pointFormat: '<span style="color:{series.color}">\u25CF</span> {series.name}: {point.y} / {point.stackTotal}'
                },

                plotOptions: {
                    column: {
                        stacking: 'normal',
                        depth: 40
                    }
                },

                series: [{
                    name: 'John',
                    data: [5, 3, 4, 7, 2],
                    stack: 'male'
                }, {
                    name: 'Joe',
                    data: [3, 4, 4, 2, 5],
                    stack: 'male'
                }, {
                    name: 'Jane',
                    data: [2, 5, 6, 2, 1],
                    stack: 'female'
                }, {
                    name: 'Janet',
                    data: [3, 0, 4, 4, 3],
                    stack: 'female'
                }]
            });

        }

        function renderDashboardAdministrator() {
            $(".container-fluid").empty();
            let content = "";

            content += "<div class='row p-2'>";
            content += "<h1>Dashboard de Administrator</h1>";
            content += "</div>";

            $(".container-fluid").append(content);
        }

        function renderDashboardCustomer() {
            $(".container-fluid").empty();
            let content = "";

            content += "<div class='row p-2'>";
            content += "<h1>Dashboard de Cliente</h1>";
            content += "</div>";

            $(".container-fluid").append(content);
        }

        function DashboardWorker() {
            $(".container-fluid").empty();
            APIController.GetWorkerData().then((res) => {
                let content = renderDashboardWorker(res.Data);
                $(".container-fluid").append(content);
                //transform controls------------------------------------------
                $("#dpt-DateOfBirth").datepicker({ dateFormat: 'dd-mm-yy' });
                let datebirth = formatDateForCalendar(res.Data.DateOfBirth);
                $("#dpt-DateOfBirth").val(datebirth);
                //set gender--------------------------------------------------
                let genderId = res.Data.GenderId;
                $('#select-gender-Worker option[value=' + genderId + ']').attr('selected', 'selected');
            });
        }

        function changeFoto() {
            $('.dropify').dropify();
            $("#modalUploadFoto").modal("show");
        }

        function removeFoto() {
            $("#imgFoto").attr("src", "");
        }

        function getFileFoto() {
            return new Promise((resolve, reject) => {
                let obj = $("#input-file-now-foto")[0].files;
                if (obj && obj[0]) {
                    var reader = new FileReader();
                    reader.onload = function () {
                        resolve(reader.result);
                    }
                    reader.readAsDataURL(obj[0])
                }
            });
        }

        function AcceptFoto() {
            getFileFoto().then(res => {
                $("#imgFoto").attr("src", res);
                $("#modalUploadFoto").modal("hide");
            });
        }

    </script>

    @RenderSection("scripts", required: false)

</body>
</html>




