@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Styles{

    <style type="text/css">
        .indicator {
            text-align: center;
        }

        #table-tracking {
            width: 90%;
            margin: auto
        }

        .isProccessTrue {
            color: blue;
            font-size: 16px;
            font-weight: 500;
        }

        .isProccessFalse {
            color: gray;
        }

        .tdClick {
            cursor: pointer;
        }

        .label-potencial {
            background-color: #B9B6B5;
        }

        .label-seguimiento {
            background-color: #ffc107;
        }

        .label-aceptada {
            background-color: #09a009;
        }

        .label-descartada {
            background-color: #fb3a3a;
        }

        .label {
            width: 76%;
            text-align: center;
            padding: 7px 5px;
        }

        .table {
            color: #000000 !important;
        }

        #table {
            font-size: 12px;
            vertical-align: middle;
        }

            #table thead th {
                background-color: #2e548f;
                color: white;
                vertical-align: middle;
                padding: 10px 1px 10px 1px;
            }

            #table tbody td {
                vertical-align: middle;
                padding: 0px 5px 0px 5px;
            }
    </style>


}
<div class="card mb-2">
    <div class="card-body pt-2 pb-2">
        <h3 class="card-title font-weight-bold">MATRIZ DE SEGUIMIENTO</h3>
        <h5 class="card-subtitle mb-0" style=" font-weight: 700;">Cotizaciones</h5>
    </div>
</div>

<div class="row">
    <div class="col-md-6">
        <div class="card">
            <div class="card-header" style="background-color:white;">
                <h5 class="card-title mb-0 font-weight-bold">FILTROS</h5>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-12">
                        <div class="row">
                            <div class="form-group col-md-3">
                                <label for="txtRuc">RUC</label>
                                <input type="text" class="form-control" id="txtRuc" maxlength="11" value="" onkeypress="validateInputNumber(event)" autofocus>
                            </div>
                            <div class="form-group col-md-3">
                                <label for="txtNroCotizacion">Nro Cotización</label>
                                <input type="text" class="form-control" id="txtNroCotizacion" maxlength="20" value="">
                            </div>
                            <div class="form-group col-md-6">
                                <label for="ddlStatus">Estado</label>
                                <select class="selectpicker" multiple data-live-search="true" id="ddlStatus">
                                    <option value="4">Potencial</option>
                                    <option value="1">Seguimiento</option>
                                    <option value="2">Aceptada</option>
                                    <option value="3">Descartada</option>
                                </select>                                
                            </div>

                        </div>
                        <div class="row">
                            <div class="form-group col-md-4">
                                <label for="dtpStart">Fecha Inicio</label>
                                <input class="form-control text-center" id="dtpStart">
                            </div>
                            <div class="form-group col-md-4">
                                <label for="dtpEnd">Fecha Fin</label>
                                <input class="form-control text-center" id="dtpEnd">
                            </div>
                            <div class="form-group col-md-4">
                                <label>&ensp;</label>
                                <input type="button" class="form-control btn btn-info text-white" value="Filtrar" onclick="Filter()" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="card">
            <div class="card-body">
                <h4 class="card-title"></h4>
                <div class="row">
                    <div class="col-md-6 col-12">
                        <canvas id="chart3" height="120"></canvas>
                    </div>
                    <div class="col-md-6 col-12">
                        <div class="table-responsive">
                            <table class="table ">
                                @*<thead>
                                        <tr>
                                            <th colspan="2">Gráfico Cotización</th>
                                        </tr>
                                    </thead>*@
                                <tbody>
                                    <tr>
                                        <td><span class="label label-potencial">Potencial</span></td>
                                        <td id="statusPotential">0</td>

                                    </tr>
                                    <tr>
                                        <td><span class="label label-seguimiento">Seguimiento</span></td>
                                        <td id="statusTracking">0</td>

                                    </tr>
                                    <tr>
                                        <td><span class="label label-aceptada">Aceptada</span></td>
                                        <td id="statusAccepted">0</td>

                                    </tr>
                                    <tr>
                                        <td><span class="label label-descartada">Descartada</span></td>
                                        <td id="statusdiscarded">0</td>

                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



<div class="card">
    <div class="card-body">
        @*<button onclick="location.href='@Url.Action("Register","Quotation", new { id = 0})'" class="btn btn-success waves-effect waves-light m-b-10">Crear  Cotización</button>*@
        <div class="table-responsive">
            <table id="table" class="table table-bordered">
                <thead>
                    <tr>
                        <th></th>
                        <th style="display: none ">ID</th>
                        <th>N° PROPUESTA</th>
                        <th>FEC. ENVÍO</th>
                        <th>FEC. ACEPTACIÓN</th>
                        <th>EMPRESA</th>
                        <th>COSTO</th>
                        <th>ESTADO</th>
                        <th>FEC. US</th>
                        <th>COMENTARIO</th>
                        <th class="text-nowrap">INDICADOR</th>
                        <th class="text-nowrap">ACCIONES</th>
                        <th class="text-nowrap">VERSIONES</th>
                        <th class="text-nowrap">PROPUESTA</th>
                    </tr>
                </thead>
                <tbody id="tbody-filter-quotation">
                </tbody>
            </table>
        </div>
    </div>
</div>

<div class="modal fade" id="TrackingModal" tabindex="-1" role="dialog" aria-labelledby="TrackingModalLabel1" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog " role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="exampleModalLabel1">Registrar Seguimiento</h4>
                <button type="button" id="btn-close-TrackingModal" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            </div>
            <input type="hidden" id="txthiddenQuotationTracking" value="0" />
            <input type="hidden" id="txthiddenQuotation" value="0" />
            <input type="hidden" id="txthiddentxtDate" value="0" />
            <input type="hidden" id="txthiddenStatusQuotationId" value="0" />
            <div class="modal-body" style="padding: 0">
                <div class="form-group col-12">
                    <label for="txtComentary">Comentario</label>
                    <textarea type="text" class="form-control" id="txtComentary" autocomplete="off"></textarea>                                        
                </div>
            </div>
            <div class="modal-footer">
                <button id="btn-save-TrackingModel" onclick="SaveTracking()" type="button" class="btn btn-warning" data-dismiss="modal" disabled>Grabar</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="ModalVersions" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel1">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="exampleModalLabel1">Versiones de la cotización <span id="nroCot"> </span></h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            </div>
            <div class="modal-body" style="font-size:10px;">
                <p id="modalCompany"></p>
                <table class="table color-table success-table ">
                    <thead>
                        <tr>
                            <th>Activa</th>
                            <th>Nro.Version</th>
                            <th>F. Envio</th>
                            <th>Costo</th>
                            <th>Estado</th>
                            <th class="text-nowrap">Editar</th>
                        </tr>
                    </thead>
                    <tbody id="table-versions">
                    </tbody>
                </table>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-info" data-dismiss="modal">Cerrar</button>
            </div>
        </div>
    </div>
</div>


@section scripts{
    <script src="~/Scripts/APIController.js"></script>
    <script src="~/assets/plugins/Chart.js/Chart.min.js"></script>

    <script type="text/javascript">

    $(document).ready(function () {
        
        $('#ddlStatus').selectpicker();
        $('.selectpicker').selectpicker('val', [1, 4]);

        $("#dtpStart").datepicker();
        $("#dtpEnd").datepicker();
        loadDates();

        Filter();

        $('#tbody-filter-quotation').on('change', '.select-StatusQuotation', function (event) {            
            let quotationId = event.target.id.split('-')[1];
            let id = event.target.id;
            let StatusQuotationId = $("#" + id + " option:selected").val();        
            $("#txthiddenStatusQuotationId").val(StatusQuotationId);        
            AddTracking(quotationId);
        });
        
        $('#table-versions').click(function (event) {            
            let result = $(event.target).html();
            if (result== 'Desactivado') {
                $('#table-versions > tr').each(function (index, tr) {

                    $(tr).find('.tdClick').removeClass('isProccessTrue');
                    $(tr).find('.tdClick').text("Desactivado");

                });

               if ($(event.target).hasClass('tdClick')) {
                   event.target.innerText = "Activado";
                    $(event.target).removeClass('isProccessFalse');
                    $(event.target).addClass('isProccessTrue');
                    let quoationId = $(event.target).attr("id");
                    let code = $("#nroCot").text();
                    APIController.UpdateProccessQuotation({"QuotationId": quoationId, "Code": code}).then((res) => {
                        Filter();
                    });
                }
            }            
        });

        $("#btn-close-TrackingModal").click(function () {            
            $("#txthiddenQuotationTracking").val(0);
            $("#txthiddenQuotation").val(0);
            $("#txthiddentxtDate").val(0);  
            $("#txthiddenStatusQuotationId").val(0);

             Filter();
        });

        $("#txtComentary").on('change paste keyup', function (e) {
            let length = e.currentTarget.value.length;
            if (length > 0) {
                $("#btn-save-TrackingModel").prop('disabled', false);
            } else {
                $("#btn-save-TrackingModel").prop('disabled', true);
            }
        });
    });

    function edit(id) {
        var url = '@Url.Action("Register", "Quotation", new { id = "js-id" })'
            .replace("js-id", encodeURIComponent(id));

        location.href = url;
    }

    function Filter() {
        $("#tbody-filter-quotation").empty();
        var params = {
            "NroQuotation": $("#txtNroCotizacion").val(),
            "StartDate": $("#dtpStart").val(),
            "EndDate": $("#dtpEnd").val(),
            "CompanyName": $("#txtRuc").val(),
            "StatusQuotationId": $("#ddlStatus").val()
        }        

        APIController.FilterQuotation(params).then((resp) => {            
            if (resp.Data.length == 0) {
                let msg = MessageTable(resp,13,'messageTableEmpty');
                $("#tbody-filter-quotation").append(msg);
                return;
            }

            var content = "";
            var data = resp.Data;
            for (let i = 0; i < data.length; i++) {
                var quotationId = data[i].QuotationId;
                content += "<tr id='track-"+quotationId+"'>";
                content += "<td><i class='fa fa-plus text-inverse' onclick=show('track-" + quotationId + "')></i></td>";
                content += "<td style='display:none'>" + quotationId + "</td>";
                content += "<td>" + data[i].NroQuotation + "</td>";
                content += "<td>" + formatDate(data[i].ShippingDate) + "</td>";
                content += "<td>" + formatDate(data[i].AcceptanceDate) + "</td>";
                content += "<td>" + data[i].CompanyName + "</td>";
                content += "<td>" + data[i].Total + "</td>";

                content += "<td>";


                content += "<select class='form-control form-white select-StatusQuotation'  id='ddlStatusQuotation-" + quotationId + "' "+ Isdisabled(data[i].StatusQuotationId) +">";
                content += "<option value='4' "+selected(4,data[i].StatusQuotationId)+">Potencial</option>";
                content += "<option value='1' "+selected(1,data[i].StatusQuotationId)+">Seguimiento</option>";
                content += "<option value='2' "+selected(2,data[i].StatusQuotationId)+">Aceptada</option>";
                content += "<option value='3' "+selected(3,data[i].StatusQuotationId)+">Descartada</option>";
                content += "</select>";


                content += "</td>";
                content += "<td>" + formatDate(data[i].USDate) + "</td>";
                content += "<td>" + data[i].TrackingDescription + "</td>";

                if (data[i].Indicator === "GREEN") {
                    content += "<td class='indicator'><i class='fa fa-circle waves-effect waves-light' style='color:green'></i></td>";
                } else if (data[i].Indicator === "AMBER") {
                    content += "<td class='indicator'><i class='fa fa-circle waves-effect waves-light'  style='color:darkorange'></i></td>";
                } else if (data[i].Indicator === "RED") {
                    content += "<td class='indicator'><i class='fa fa-circle waves-effect waves-light' style='color:red'></i></td>";
                } else {
                    content += "<td class='indicator'><i class='fa fa-circle waves-effect waves-light'></i></td>";
                }

                var a = '\"' + data[i].NroQuotation + '\"';
                content += "<td><a onclick='edit(" + data[i].QuotationId + ")'  data-toggle='tooltip' data-original-title='Edit'> <i class='fa fa-pencil btn waves-effect waves-light btn-secondary'></i></a><a onclick='AddTracking(" + data[i].QuotationId + ")'  data-toggle='tooltip' data-original-title='Edit'> <i class='fa fa-phone btn waves-effect waves-light btn-secondary'></i></a></td>";
                content += "<td><a onclick='viewVersion(" + a + ")' data-toggle='tooltip' data-original-title='Versiones'> <i class='fa fa-list btn waves-effect waves-light btn-secondary'></i></a></td>";
                content += "<td><a onclick='viewPropuesta("+data[i].QuotationId+")' data-toggle='tooltip' data-original-title='Propuesta'> <i class='fa fa-file-pdf-o btn waves-effect waves-light btn-secondary'></i></a></td>";
                content += "</tr>";

                content += "<tr style='display:none' class='track-"+quotationId+"'>";
                content += "<td colspan='10'>";

                content += "<div class='table-responsive' id='table-Tracking-"+quotationId+"'>"
                content += "<table id='table-tracking' class='table color-table muted-table'>";
                content += "<thead>";
                content += "<tr>";
                content += "<th style='display:none'>ID</th>";
                content += "<th>Fecha</th>";
                content += "<th>Versión</th>";
                content += "<th>Estado</th>";
                content += "<th>Comentario</th>";
                content += "</tr>";
                content += "</thead>";
                content += "<tbody id='tbody-Tracking-"+quotationId+"'>";
                var detail = data[i].QuoteTracking;
                
                for (var ii = 0; ii < detail.length; ii++) {
                    content += "<tr id='tr-"+detail[ii].QuoteTrackingId+"'>";
                    content += "<td  style='display:none'>" + detail[ii].QuoteTrackingId + "</td>";
                    content += "<td>" + formatDate(detail[ii].Date)+ "</td>";
                    content += "<td>" + detail[ii].Version + "</td>";
                    content += "<td>" + detail[ii].StatusName + "</td>";
                    content += "<td>" + detail[ii].Commentary + "</td>";                    
                    content += "</tr>";
                }
                content += "</tbody>";
                content += "</table>";
                content += "</div>";

                content += "</td>";
                content += "</tr>";

            }
            $("#tbody-filter-quotation").append(content);
            StatisticalGraph();
        });
    }

    function loadDates() {      
        let days = getFirstAndLastDayOfMonth();
        $("#dtpStart").val(days.FirstDate);
        $("#dtpEnd").val(days.EndDate);
    }

    function AddTracking(id) {
        ClearPoupTracking();
        $("#TrackingModal").modal("show");
        $("#txthiddenQuotation").val(id);
    }

    function SaveTracking() {
        
        let quotationTrackingId = $("#txthiddenQuotationTracking").val();
        let quotationId = $("#txthiddenQuotation").val();
        let StatusQuotationId = $("#ddlStatusQuotation-" + quotationId + " option:selected").val();
                
        if (StatusQuotationId == STATUS_QUOTATION_ACEPTADA) {
            swal({
                title: "IMPORTANTE",
                text: "Al aceptar está cotización se generará protocol(os)",
                type: "info",
                showCancelButton: true,
                closeOnConfirm: false,
                showLoaderOnConfirm: true
            }, function (isConfirm) {
                    if (isConfirm) {
                        APISaveQuoteTrackingAndUpdateStatusQuotationId();
                        MigrateQuotationToProtocol($("#txthiddenQuotation").val());
                    }
                    else {
                        console.log("Canceló grabado");
                    }
            });                

        } else {
            //Nuevo Seguimiento
            if (quotationTrackingId == 0) {
                APISaveQuoteTrackingAndUpdateStatusQuotationId();
                StatisticalGraph();
            }            
        }
    }

    function MigrateQuotationToProtocol(idQuotation) {
        APIController
            .MigrateQuotationToProtocols({ "QuotationId":idQuotation })
            .then((res) => {
                //swal("Bien", "La cotización se migró correctamente", "success");
                swal({
                    title: "¿Desea migrar el protocolo a SIGESoftWin?",
                    text: "Este protocolo podrá ser usado en la versión SIGESoftWin.",
                    type: "warning",
                    showCancelButton: true,
                    confirmButtonClass: "btn-danger",
                    confirmButtonText: "¡Sí, migrar!",
                    cancelButtonText: "No, cancelar",
                    closeOnConfirm: false,
                    closeOnCancel: false
                },
                    function (isConfirm) {
                        if (isConfirm) {                                     
                            MigrarProtocolSIGESftWin(idQuotation);
                        } else {
                            swal("Cancelad", "Se canceló la migración", "error");
                        }
                    });

                StatisticalGraph();
            });
    }

    function MigrarProtocolSIGESftWin(idQuotation) {
        APIController
            .MigrateToProtocolSIGESoftWin({ "QuotationId": idQuotation })
            .then((res) => {
                swal("¡Migrado!", "El protocolo fue migrado correctamente", "success");
            });
    }

    function APISaveQuoteTrackingAndUpdateStatusQuotationId() {
         var params = {
                "QuotationId": $("#txthiddenQuotation").val(),
                "Commentary": $("#txtComentary").val(),
                "StatusName": $("#ddlStatusQuotation-" + $("#txthiddenQuotation").val() + " option:selected").text(),                
        }

         APIController.SaveQuoteTracking(params).then((resp) => {
                var data = resp.Data;
                let content = "";
                content += "<tr id='tr-"+data.QuoteTrackingId+"'>";
                content += "<td  style='display:none'>" + data.QuoteTrackingId + "</td>";                
                content += "<td>" + formatDate(data.Date) + "</td>";
                content += "<td>" + data.Version+ "</td>";
                content += "<td>" + data.StatusName + "</td>";
                content += "<td>" + data.Commentary + "</td>";                
                content += "</tr>";

                $("#tbody-Tracking-" + data.QuotationId).append(content);
                let quotationId = $("#txthiddenQuotation").val();
                let StatusQuotationId = $("#ddlStatusQuotation-" + quotationId + " option:selected").val();
                
                APIController.UpdateQuotation({ "QuotationId": quotationId, "StatusQuotationId": StatusQuotationId }).then((res) => {

                    Filter();
                    StatisticalGraph();

                });

                ClearPoupTracking();
            });

    }
        
    function EditTracking(id) {
        ClearPoupTracking();           

             APIController.GetQuotationtracking(id).then((resp) => {
            let data = resp.Data;

            $("#TrackingModal").modal("show");
             $("#txtComentary").focus();
            
            $("#txthiddenQuotation").val(data.QuotationId);
            $("#txtComentary").val(data.Commentary);
            $("#txthiddenQuotationTracking").val(data.QuoteTrackingId);
            $("#txthiddentxtDate").val(formatDate(data.Date));            

        });
      
    }

    function ClearPoupTracking() {
        $("#txthiddenQuotationTracking").val(0);
        $("#txthiddentxtDate").val(0);
        $("#txthiddenQuotation").val(0);
        $("#txtComentary").val("");
    }

    function StatisticalGraph() {
         let params = {            
            "StartDate": $("#dtpStart").val(),
            "EndDate": $("#dtpEnd").val()            
            } 

        APIController.TrackingChart(params).then((resp) => {

            console.log("RESP", resp);
            let data = resp.Data;
            if (data.length > 0) {
                var ctx3 = document.getElementById("chart3").getContext("2d");
        var statusPotential = 0;
        var statusTracking = 0;
        var statusAccepted = 0;
        var statusdiscarded = 0;

        for (var i = 0; i < data.length; i++) {
            if (data[i].StatusQuotationId == 1) {
                statusTracking++;
            }else if (data[i].StatusQuotationId == 2) {
                statusAccepted++;
            }else if (data[i].StatusQuotationId == 3) {
                statusdiscarded++;
            }else if (data[i].StatusQuotationId == 4) {
                statusPotential++;
            }
        }

        $("#statusTracking").html(statusTracking);
        $("#statusAccepted").html(statusAccepted);
        $("#statusdiscarded").html(statusdiscarded);
        $("#statusPotential").html(statusPotential);
                
        var data3 = [
            {
                value: statusTracking,
                //color: "#009efb",
                color: "#ffc107",
                highlight: "#ffe69d",
                label: "Seguimiento"
            },
            {
                value: statusAccepted,
                //color: "#edf1f5",
                color: "#09a009",
                highlight: "#7ab77a",
                label: "Aceptada"
            },
            {
                value: statusdiscarded,
                //color: "#2f3d4a",
                color: "#fb3a3a",
                highlight: "#f19b9b",
                label: "Descartada"
            },
            {
                value: statusPotential,
                //color: "#2f3d4a",
                color: "#B9B6B5",
                highlight: "#EEECEB",
                label: "Potencial"
            }
        ];

        var myPieChart = new Chart(ctx3).Pie(data3, {
            segmentShowStroke: true,
            segmentStrokeColor: "#fff",
            segmentStrokeWidth: 0,
            animationSteps: 100,
            tooltipCornerRadius: 0,
            animationEasing: "easeOutBounce",
            animateRotate: true,
            animateScale: false,
            legendTemplate: "<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<segments.length; i++){%><li><span style=\"background-color:<%=segments[i].fillColor%>\"></span><%if(segments[i].label){%><%=segments[i].label%><%}%></li><%}%></ul>",
            responsive: true
        });
            }
            
        
        });

        
    }

    function show(value) {
        var td = $($("#" + value + " td")[0]).find("i");
        let pClass = '.' + value;

        if ($(pClass).css("display") == "none") {
            $(pClass).fadeIn(1000);
            $(pClass).show();
            td.addClass('fa-minus');
            td.removeClass('fa-plus');
        }
        else {
            $(pClass).hide();
            td.removeClass('fa-minus');
            td.addClass('fa-plus');
        }
    }

    function selected(value, id) {        
        
        if (value == id) {            
            return 'selected';
        }
        return '';
        }

    function Isdisabled(stateQuotation) {
        if (stateQuotation == STATUS_QUOTATION_ACEPTADA) return "disabled";
    }

    function viewVersion(code) {
        $("#table-versions").empty();
        let codeQuotation = code.split(' ')[0];
        $("#nroCot").html(codeQuotation);
        $("#ModalVersions").modal("show");
        let content = "";
        APIController.GetVersions(codeQuotation).then((resp) => {

            let data = resp.Data;
            $("#modalCompany").html(data[0].CompanyName);

            for (var i = 0; i < data.length; i++) {
                content += "<tr>";
                content += "<td>";
                if (data[i].IsProccess == 1) {
                    content += "<label id='"+ data[i].QuotationId +"' class='tdClick isProccessTrue'>Activado</label>";
                } else {
                    content += "<label id='"+ data[i].QuotationId +"' class='tdClick isProccessFalse'>Desactivado</label>";
                }

                content += "</td>";
                content += "<td>" + data[i].Version + "</td>";
                if (data[i].ShippingDate == null) {
                    content += "<td>----</td>";
                } else {
                    content += "<td>" + formatDate(data[i].ShippingDate) + "</td>";
                }
                
                content += "<td>" + data[i].Total + "</td>";
                content += "<td>" + data[i].StatusQuotationName + "</td>";
                content += "<td><a onclick='edit(" + data[i].QuotationId + ")'  data-toggle='tooltip' data-original-title='Edit'> <i class='fa fa-pencil btn waves-effect waves-light btn-secondary'></i></a></td>";
                content += "</tr>";

            }
            $("#table-versions").append(content);
        });
        }

    function viewPropuesta(code) {            
            window.location.href = '/Quotation/ExportPlantilla?code=' + code;
        }

    </script>

}



