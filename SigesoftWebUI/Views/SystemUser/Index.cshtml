@{
    ViewBag.Title = "View";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Styles{
    <style type="text/css">
        th.dt-center, td.dt-center {
            text-align: center;
        }

        #meter {
            border: 1px solid maroon;
            width: 300px;
            height: 15px;
            margin: 5px auto;
            border-radius: 5px;
        }

        #result {
            font-size: larger;
            font-weight: bold;
            margin-left: 120px;
        }
    </style>
}
<div class="card mb-2">
    <div class="card-body pt-2 pb-2">
        <h3 class="card-title">Listado de Usuarios</h3>
        <h5 class="card-subtitle mb-0">Mantenimiento de Usuarios</h5>
    </div>
</div>

<div class="card">
    <div class="card-body">
        <button onclick="openModalUser(0)" class="btn btn-success waves-effect waves-light m-b-10">Nuevo Usuario</button>
        <div class="table-responsive m-t-20">
            <table id="table-systemusers" class="table table-bordered table-hover">
                <thead class="table-info">
                    <tr>
                        <th>Nombre Completo</th>
                        <th>Usuario</th>
                        <th>Email</th>
                        @*<th>Nombres</th>
                            <th>Usuario</th>
                            <th>Usuario</th>
                            <th>Usuario</th>*@
                        <th class="text-nowrap">Editar</th>
                        <th class="text-nowrap">Accesos</th>
                        <th class="text-nowrap">Email</th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
        </div>
    </div>
</div>

<div class="modal fade" id="ModalUser" tabindex="-1" role="dialog" aria-labelledby="TrackingModalLabel1">
    <div class="modal-dialog " role="document">
        <div class="content-alert">
        </div>
        <input type="hidden" id="hiddenSystemUserId" name="hiddenSystemUserId" value="" />
        <input type="hidden" id="hiddenPersonId" name="hiddenPersonId" value="" />
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="labelModalUser">Nuevo Usuario</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            </div>
            <div class="modal-body" style="padding: 0">

                <div class="form-group col-12">
                    <label for="inputFirstName">Primer Nombre</label>
                    <input type="text" onkeypress="return soloLetras(event)" id="inputFirstName" name="inputFirstName" class="form-control" value="" required />
                </div>
                <div class="form-group col-12">
                    <label for="inputFirstLastName">Apellido Paterno</label>
                    <input type="text" onkeypress="return soloLetras(event)" id="inputFirstLastName" name="inputFirstLastName" class="form-control" value="" required />
                </div>
                <div class="form-group col-12">
                    <label for="inputSecondtLastName">Apellido Materno</label>
                    <input type="text" onkeypress="return soloLetras(event)" id="inputSecondtLastName" name="inputSecondtLastName" class="form-control" value="" required />
                </div>
                <div class="form-group col-12">
                    <label for="inputEmail">Email</label>
                    <input type="email" id="inputEmail" name="inputEmail" class="form-control" value="" required/>
                </div>
                <div class="form-group col-12">
                    <label for="inputUserName">Usuario</label>
                    <input type="text" id="inputUserName" name="inputUserName" class="form-control" value="" required />
                </div>
                <div class="form-group col-12 m-b-0">
                    <label for="inputPassword1">Contraseña</label>
                    <input type="password" id="inputPassword1" name="inputPassword1" class="form-control" value="" required />
                    <div id="meter"></div>
                    <span id="result"></span>
                </div>
                <div class="form-group col-12">
                    <label for="inputPassword2">Repita Contraseña</label>
                    <input type="password" id="inputPassword2" name="inputPassword2" class="form-control" value="" required />
                </div>

            </div>
            <div class="modal-footer">
                <button onsubmit="" onclick="SaveUser(event)" type="button" class="btn btn-warning">Grabar</button>
            </div>
        </div>

    </div>
</div>


@section scripts{
    <script src="~/Scripts/APIController.js"></script>
    <script type="text/javascript">

        $(document).ready(function () {
            $("#meter").progressbar();

            $("#inputPassword1").keyup(function(){
                checkPassword($("#inputPassword1").val());
		    });
           APIController.GetAllSystemUser().then((res) => {
                renderTable(res.Data);
                initDataTable();
            });
        });

        function renderTable(data) {
            let content = "";
            for (var i = 0; i < data.length; i++) {

                content += "<tr>";
                content += "<td>" + data[i].FullName + "</td>";
                content += "<td>" + data[i].UserName + "</td>";
                content += "<td>" + data[i].Email + "</td>";
                content += "<td><a onclick='openModalUser("+data[i].SystemUserId+"," + data[i].PersonId + ")' data-toggle='tooltip'  data-original-title='Usuario'><i class='fa fa-user btn waves-effect waves-light btn-secondary'></i></a></td>";
                content += "<td><a onclick='registerAccess(" + data[i].SystemUserId + ")' data-toggle='tooltip'  data-original-title='Registrar Accesos'><i class='fa fa-lock btn waves-effect waves-light btn-secondary'></i></a></td>";
                content += "<td><a onclick='enviarCorreo("+data[i].SystemUserId+")' data-toggle='tooltip'  data-original-title='Enviar Correo'><i class='fa fa-send btn waves-effect waves-light btn-secondary'></i></a></td>";
                content += "</tr>";
            }

            $('#table-systemusers tbody').append(content);
        }

        function initDataTable() {
            $('#table-systemusers').dataTable({
                "columns": [{'width':'85%'},{'width':'5%',"className":"dt-center"},{'width':'5%',"className":"dt-center"},{'width':'5%',"className":"dt-center"}],
                dom: 'lfrtip',
                "language": {
                    "sProcessing": "Procesando...",
                    "sLengthMenu": "Mostrar _MENU_ registros",
                    "sZeroRecords": "No se encontraron resultados",
                    "sEmptyTable": "Ningún dato disponible en esta tabla",
                    "sInfo": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                    "sInfoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                    "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
                    "sInfoPostFix": "",
                    "sSearch": "Buscar:",
                    "sUrl": "",
                    "sInfoThousands": ",",
                    "sLoadingRecords": "Cargando...",
                    "oPaginate": {
                        "sFirst": "Primero",
                        "sLast": "Último",
                        "sNext": "Siguiente",
                        "sPrevious": "Anterior"
                    },
                    "oAria": {
                        "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                        "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                    }
                }
            });
        }

         function soloLetras(e){
            key = e.keyCode || e.which;
            tecla = String.fromCharCode(key).toLowerCase();
            letras = " áéíóúabcdefghijklmnñopqrstuvwxyz";
            especiales = "8-37-39-46";

            tecla_especial = false
            for(var i in especiales){
                if(key == especiales[i]){
                    tecla_especial = true;
                    break;
               }
            }

            if(letras.indexOf(tecla)==-1 && !tecla_especial){
                return false;
            }
        }


        function Filter() {
            $('#table-systemusers tbody').empty();
            APIController.GetAllSystemUser().then((res) => {
                 let content = "";
                let data = res.Data;

                for (var i = 0; i < data.length; i++) {

                    content += "<tr>";
                    content += "<td>" + data[i].FullName + "</td>";
                    content += "<td>" + data[i].UserName + "</td>";
                    content += "<td>" + data[i].Email + "</td>";
                    content += "<td><a onclick='openModalUser("+data[i].SystemUserId+"," + data[i].PersonId + ")' data-toggle='tooltip'  data-original-title='Usuario'><i class='fa fa-user btn waves-effect waves-light btn-secondary'></i></a></td>";
                    content += "<td><a onclick='registerAccess("+data[i].SystemUserId+")' data-toggle='tooltip'  data-original-title='Registrar Accesos'><i class='fa fa-lock btn waves-effect waves-light btn-secondary'></i></a></td>";
                    content += "</tr>";
                }

                $('#table-systemusers tbody').append(content);
            });
        }

        function registerAccess(id) {
            var url = @SigesoftWebUI.Models.Script.Action("Register", "SystemUser", new { id="js:id"});
            location.href = url;
        }

        function openModalUser(idUser, idPerson) {
            clearModal();
            if (idUser != 0) {
                $("#hiddenSystemUserId").val(idUser);
                $("#hiddenPersonId").val(idPerson);

                $("#labelModalUser").html("Editar Usuario");
                APIController.GetUser(idUser).then((res) => {
                    let dataUser = res.Data;
                    APIController.GetPerson(res.Data.PersonId).then((res) => {

                        let dataPerson = res.Data;
                        $("#inputFirstName").val(dataPerson.FirstName);
                        $("#inputFirstLastName").val(dataPerson.FirstLastName);
                        $("#inputSecondtLastName").val(dataPerson.SecondLastName);
                        $("#inputEmail").val(dataUser.Email);
                        $("#inputUserName").val(dataUser.UserName);

                    });
                });
            } else {
                $("#hiddenSystemUserId").val(0);
                $("#labelModalUser").html("Nuevo Usuario");
            }

            $("#ModalUser").modal("show");
        }

        function clearModal() {
            $("#hiddenSystemUserId").val(0);
            $("#inputFirstName").val("");
            $("#inputFirstLastName").val("");
            $("#inputSecondtLastName").val("");
            $("#inputEmail").val("");
            $("#inputUserName").val("");
            $("#inputPassword1").val("");
            $("#inputPassword2").val("");
        }

        function ValidateEqualPasswords() {

            let p1 = $("#inputPassword1").val();
            let p2 = $("#inputPassword2").val();
            if (p1 !== p2) {
                console.log("???");
                newAlert("#inputPassword1", "VALIDACIÓN", "Las contraseñas no son iguales");
                return false;
            } else {
                return true;
            }

        }

        function checkEmail() {

            var email = document.getElementById('inputEmail');
            var filter = /^([a-zA-Z0-9_\.\-])+\u0040(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+$/;

            if (!filter.test(email.value)) {
                alert('Please provide a valid email address');
                email.focus;
                return false;
            }
        }


        function SaveUser(event) {

            if (!ValidateEqualPasswords()) return false;

            if (!checkEmail()) return false;



            if (ValidateModalUSer(event)) {
                let idUser = $("#hiddenSystemUserId").val();
                let idPerson = $("#hiddenPersonId").val();

                if (idUser == 0) {
                    let params = {
                        "FirstName": $("#inputFirstName").val(),
                        "FirstLastName": $("#inputFirstLastName").val(),
                        "SecondLastName": $("#inputSecondtLastName").val(),
                    }
                    APIController.SavePerson(params).then((res) => {

                        let datauser = res.Data;
                        let params = {
                            "PersonId": datauser.PersonId,
                            "UserName": $("#inputUserName").val(),
                            "Password": $("#inputPassword1").val(),
                            "Email": $("#inputEmail").val()
                        }
                        APIController.SaveUser(params).then((res) => {
                            $("#ModalUser").modal("hide");
                            Filter();
                        });
                    });

                } else if (idUser > 0) {

                    let params = {
                        "PersonId": idPerson,
                        "FirstName": $("#inputFirstName").val(),
                        "FirstLastName": $("#inputFirstLastName").val(),
                        "SecondLastName": $("#inputSecondtLastName").val(),
                    }

                    APIController.UpdatePerson(params).then((res) => {

                        let params = {
                            "SystemUserId": idUser,
                            "UserName": $("#inputUserName").val(),
                            "Password": $("#inputPassword1").val(),
                            "Email": $("#inputEmail").val()
                        }
                        APIController.UpdateUser(params).then((res) => {
                            $("#ModalUser").modal("hide");
                            Filter();
                        });
                    });
                }
            }
        }

        function ValidateModalUSer(event) {

            //I)eliminar la clase error
            clearErrors();
            //II)Valida inputs
            var validateFirstName = validateInputUser("inputFirstName", "Primer Nombre requerido");
            var validateFirtsLastName = validateInputUser("inputFirstLastName", "Apellido Parteno requerido");
            var validateSecondLastName = validateInputUser("inputSecondtLastName", "Apellido Materno requerido");
            //var validateEmail = validateInput("inputEmail", "Email requerido");
            var validateUsernName = validateInputUser("inputUserName", "Usuario requerido");

            var validatePassword1 = validateInputUser("inputPassword1", "Password requerido");
            var validatePassword2 = validateInputUser("inputPassword2", "Confirmación de password requerido");

            //II)Retornar resultado de validación
            if (validateFirstName && validateFirtsLastName && validateSecondLastName && validateUsernName && validatePassword1 && validatePassword2) {
                return true;
            } else {
                return false;
            }
        }

        function clearErrors() {
            $("#inputFirstName").removeClass('error');
            $("#inputFirstLastName").removeClass('error');
            $("#inputSecondtLastName").removeClass('error');
            $("#inputEmail").removeClass('error');
            $("#inputUserName").removeClass('error');
            $("#inputPassword1").removeClass('error');
            $("#inputPassword2").removeClass('error');
        }

        function validateInputUser(id, message) {
            let element = document.getElementById(id);
            if (!element.checkValidity()) {
                newAlert(element, "VALIDACIÓN", message);
                InputError(element);
            return false;
            }
            return true;
        }

        function enviarCorreo() {

        }
    </script>

}
