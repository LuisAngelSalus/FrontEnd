@{
    ViewBag.Title = "View";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Styles{
    <style type="text/css">
        th.dt-center, td.dt-center {
            text-align: center;
        }

        #meter {
            border: 1px solid maroon;
            width: 300px;
            height: 15px;
            margin: 5px auto;
            border-radius: 5px;
        }

        #result {
            font-size: larger;
            font-weight: bold;
            margin-left: 120px;
        }
    </style>
}
<div class="card mb-2">
    <div class="card-body pt-2 pb-2">
        <h3 class="card-title">Listado de Usuarios</h3>
        <h5 class="card-subtitle mb-0">Mantenimiento de Usuarios</h5>
    </div>
</div>

<div class="card">
    <div class="card-body">
        <button onclick="openModalUser(0)" class="btn btn-success waves-effect waves-light m-b-10">Nuevo Usuario</button>
        <div class="table-responsive m-t-20">
            <table id="table-systemusers" class="table table-bordered table-hover">
                <thead class="table-info">
                    <tr>
                        <th>Nombre Completo</th>
                        <th>Usuario</th>
                        <th>Email</th>
                        <th>Roles</th>
                        <th>Compañia</th>
                        @*<th>Nombres</th>
        <th>Usuario</th>
        <th>Usuario</th>
        <th>Usuario</th>*@
                        <th class="text-nowrap">Editar</th>
                        <th class="text-nowrap">Accesos</th>
                        <th class="text-nowrap">Email</th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
        </div>
    </div>
</div>

<div class="modal fade" id="ModalUser" tabindex="-1" role="dialog" aria-labelledby="TrackingModalLabel1">
    <div class="modal-dialog " role="document">
        <div class="content-alert">
        </div>
        <input type="hidden" id="hiddenSystemUserId" name="hiddenSystemUserId" value="" />
        <input type="hidden" id="hiddenPersonId" name="hiddenPersonId" value="" />
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="labelModalUser">Nuevo Usuario</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            </div>
            <div class="modal-body" style="padding: 0">

                <div class="form-group col-12">
                    <label for="inputFirstName">Primer Nombre</label>
                    <input type="text" onblur="return validarNombre(this.value)" id="inputFirstName" name="inputFirstName" class="form-control" value="" />
                </div>
                <div class="form-group col-12">
                    <label for="inputFirstLastName">Apellido Paterno</label>
                    <input type="text" onblur="return validarApellidoPaterno(this.value)" id="inputFirstLastName" name="inputFirstLastName" class="form-control" value="" />
                </div>
                <div class="form-group col-12">
                    <label for="inputSecondtLastName">Apellido Materno</label>
                    <input type="text" onblur="return validarApellidoMaterno(this.value)" id="inputSecondtLastName" name="inputSecondtLastName" class="form-control" value="" />
                </div>
                <div class="form-group col-12">
                    <label for="inputEmail">Email</label>
                    <input type="email" onblur="return validarEmail(this.value)" id="inputEmail" name="inputEmail" class="form-control" value="" />
                </div>
                <div class="form-group col-12">
                    <label for="inputUserName">Usuario</label>
                    <input type="text" onblur="return validarNombreUsuario(this.value)" id="inputUserName" name="inputUserName" class="form-control" value="" />
                </div>
                <div id="contentPassword">
                    <div class="form-group col-12 m-b-0">
                        <label for="inputPassword1">Contraseña</label>
                        <input type="password" onblur="return validarPassword(this.value)" id="inputPassword1" name="inputPassword1" class="form-control" value="" />
                        <div id="meter"></div>
                        <span id="result"></span>
                    </div>
                    <div class="form-group col-12">
                        <label for="inputPassword2">Repita Contraseña</label>
                        <input type="password" onblur="return validarPasswordIguales(inputPassword1.value,this.value)" id="inputPassword2" name="inputPassword2" class="form-control" value="" />
                    </div>
                </div>


            </div>
            <div class="modal-footer">
                <button onsubmit="" onclick="SaveUser(event)" type="button" class="btn btn-warning">Grabar</button>
            </div>
        </div>

    </div>
</div>


@section scripts{
    <script src="~/Scripts/APIController.js"></script>
    <script type="text/javascript">

        $(document).ready(function () {
            $("#meter").progressbar();

            $("#inputPassword1").keyup(function(){
                checkPassword($("#inputPassword1").val());
		    });
           APIController.GetAllSystemUser().then((res) => {
                renderTable(res.Data);
                initDataTable();
            });
        });

        function renderTable(data) {
            let content = "";
            for (var i = 0; i < data.length; i++) {

                content += "<tr>";
                content += "<td>" + data[i].FullName + "</td>";
                content += "<td>" + data[i].UserName + "</td>";
                content += "<td>" + data[i].Email + "</td>";
                content += "<td>" + data[i].Roles + "</td>";
                content += "<td>" + data[i].CompanyName + "</td>";
                content += "<td><a onclick='openModalUser("+data[i].SystemUserId+"," + data[i].PersonId + ")' data-toggle='tooltip'  data-original-title='Usuario'><i class='fa fa-user btn waves-effect waves-light btn-secondary'></i></a></td>";
                content += "<td><a onclick='registerAccess(" + data[i].SystemUserId + ")' data-toggle='tooltip'  data-original-title='Registrar Accesos'><i class='fa fa-lock btn waves-effect waves-light btn-secondary'></i></a></td>";
                content += "<td><a onclick='enviarCorreo("+data[i].SystemUserId+")' data-toggle='tooltip'  data-original-title='Enviar Correo'><i class='fa fa-send btn waves-effect waves-light btn-secondary'></i></a></td>";
                content += "</tr>";
            }

            $('#table-systemusers tbody').append(content);
        }

        function initDataTable() {
            $('#table-systemusers').dataTable({
                "columns": [{'width':'85%'},{'width':'5%',"className":"dt-center"},{'width':'5%',"className":"dt-center"},{'width':'5%',"className":"dt-center"}],
                dom: 'lfrtip',
                "language": {
                    "sProcessing": "Procesando...",
                    "sLengthMenu": "Mostrar _MENU_ registros",
                    "sZeroRecords": "No se encontraron resultados",
                    "sEmptyTable": "Ningún dato disponible en esta tabla",
                    "sInfo": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                    "sInfoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                    "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
                    "sInfoPostFix": "",
                    "sSearch": "Buscar:",
                    "sUrl": "",
                    "sInfoThousands": ",",
                    "sLoadingRecords": "Cargando...",
                    "oPaginate": {
                        "sFirst": "Primero",
                        "sLast": "Último",
                        "sNext": "Siguiente",
                        "sPrevious": "Anterior"
                    },
                    "oAria": {
                        "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                        "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                    }
                }
            });
        }

        function mostrarValidacion(nombreCampo, valido) {
            if (valido) {
                $(document).ready(function () {
                    $(nombreCampo).css('border', '1px solid #7ca22c');
                    $(nombreCampo).css('box-shadow', '0 0 2px 1px #7ca22c');
                });
            } else {
                $(document).ready(function () {
                    $(nombreCampo).css('border', '1px solid red');
                    $(nombreCampo).css('box-shadow', '0 0 2px 1px red');
                });
            }
        }

         function soloLetras(e){
            key = e.keyCode || e.which;
            tecla = String.fromCharCode(key).toLowerCase();
            letras = " áéíóúabcdefghijklmnñopqrstuvwxyz";
            especiales = "8-37-39-46";

            tecla_especial = false
            for(var i in especiales){
                if(key == especiales[i]){
                    tecla_especial = true;
                    break;
               }
            }

            if(letras.indexOf(tecla)==-1 && !tecla_especial){
                return false;
            }
        }


        function Filter() {
            $('#table-systemusers tbody').empty();
            APIController.GetAllSystemUser().then((res) => {
                 let content = "";
                let data = res.Data;

                for (var i = 0; i < data.length; i++) {

                    content += "<tr>";
                    content += "<td>" + data[i].FullName + "</td>";
                    content += "<td>" + data[i].UserName + "</td>";
                    content += "<td>" + data[i].Email + "</td>";
                    content += "<td>" + data[i].Roles + "</td>";
                    content += "<td>" + data[i].CompanyName + "</td>";
                    content += "<td><a onclick='openModalUser("+data[i].SystemUserId+"," + data[i].PersonId + ")' data-toggle='tooltip'  data-original-title='Usuario'><i class='fa fa-user btn waves-effect waves-light btn-secondary'></i></a></td>";
                    content += "<td><a onclick='registerAccess("+data[i].SystemUserId+")' data-toggle='tooltip'  data-original-title='Registrar Accesos'><i class='fa fa-lock btn waves-effect waves-light btn-secondary'></i></a></td>";
                    content += "</tr>";
                }

                $('#table-systemusers tbody').append(content);
            });
        }

        function registerAccess(id) {
            var url = @SigesoftWebUI.Models.Script.Action("Register", "SystemUser", new { id="js:id"});
            location.href = url;
        }

        function openModalUser(idUser, idPerson) {
            clearModal();
            if (idUser != 0) {
                $("#hiddenSystemUserId").val(idUser);
                $("#hiddenPersonId").val(idPerson);

                $("#labelModalUser").html("Editar Usuario");
                APIController.GetUser(idUser).then((res) => {
                    let dataUser = res.Data;
                    APIController.GetPerson(res.Data.PersonId).then((res) => {

                        let dataPerson = res.Data;
                        $("#inputFirstName").val(dataPerson.FirstName);
                        $("#inputFirstLastName").val(dataPerson.FirstLastName);
                        $("#inputSecondtLastName").val(dataPerson.SecondLastName);
                        $("#inputEmail").val(dataUser.Email);
                        $("#inputUserName").val(dataUser.UserName);
                        //$("#contentPassword").css('display', 'none');
                        //$("#inputPassword2").css('display', 'none');

                        $("#inputPassword1").val(dataUser.Password);
                        $("#inputPassword2").val(dataUser.Password);
                    });
                });
            } else {
                $("#hiddenSystemUserId").val(0);
                $("#labelModalUser").html("Nuevo Usuario");
            }

            $("#ModalUser").modal("show");
        }

        function clearModal() {
            $("#hiddenSystemUserId").val(0);
            $("#inputFirstName").val("");
            $("#inputFirstLastName").val("");
            $("#inputSecondtLastName").val("");
            $("#inputEmail").val("");
            $("#inputUserName").val("");
            $("#inputPassword1").val("");
            $("#inputPassword2").val("");
        }

        function ValidateEqualPasswords() {

            let p1 = $("#inputPassword1").val();
            let p2 = $("#inputPassword2").val();
            if (p1 !== p2) {
                console.log("???");
                newAlert("#inputPassword1", "VALIDACIÓN", "Las contraseñas no son iguales");
                return false;
            } else {
                return true;
            }

        }




        function SaveUser(event) {

            //if (!ValidateEqualPasswords()) return false;

            //if (!checkEmail()) return false;
            let idUser = $("#hiddenSystemUserId").val();
            let idPerson = $("#hiddenPersonId").val();

            console.log(idUser);
            
            console.log(validarUsuarioUpd());

            if (idUser == 0) {
                if (validarUsuarioIns()) {
                    let params = {
                        "FirstName": $("#inputFirstName").val(),
                        "FirstLastName": $("#inputFirstLastName").val(),
                        "SecondLastName": $("#inputSecondtLastName").val(),
                    }
                    APIController.SavePerson(params).then((res) => {

                        let datauser = res.Data;
                        let params = {
                            "PersonId": datauser.PersonId,
                            "UserName": $("#inputUserName").val(),
                            "Password": $("#inputPassword1").val(),
                            "Email": $("#inputEmail").val()
                        }
                        APIController.SaveUser(params).then((res) => {
                            $("#ModalUser").modal("hide");
                            Filter();
                        });
                    });
                }
            } else {
                if (validarUsuarioUpd()) {
                    let params = {
                        "PersonId": idPerson,
                        "FirstName": $("#inputFirstName").val(),
                        "FirstLastName": $("#inputFirstLastName").val(),
                        "SecondLastName": $("#inputSecondtLastName").val(),
                    }

                    console.log(params);

                    APIController.UpdatePerson(params).then((res) => {

                        let params = {
                            "SystemUserId": idUser,
                            "UserName": $("#inputUserName").val(),
                            "Password": $("#inputPassword1").val(),
                            "Email": $("#inputEmail").val()
                        }
                        APIController.UpdateUser(params).then((res) => {
                            $("#ModalUser").modal("hide");
                            Filter();
                        });
                    });
                }
            }
        }


        function ValidateModalUSer(event) {

            //I)eliminar la clase error
            clearErrors();
            //II)Valida inputs
            var validateFirstName = validateInputUser("inputFirstName", "Primer Nombre requerido");
            var validateFirtsLastName = validateInputUser("inputFirstLastName", "Apellido Parteno requerido");
            var validateSecondLastName = validateInputUser("inputSecondtLastName", "Apellido Materno requerido");
            //var validateEmail = validateInput("inputEmail", "Email requerido");
            var validateUsernName = validateInputUser("inputUserName", "Usuario requerido");

            var validatePassword1 = validateInputUser("inputPassword1", "Password requerido");
            var validatePassword2 = validateInputUser("inputPassword2", "Confirmación de password requerido");

            //II)Retornar resultado de validación
            if (validateFirstName && validateFirtsLastName && validateSecondLastName && validateUsernName && validatePassword1 && validatePassword2) {
                return true;
            } else {
                return false;
            }
        }

        function clearErrors() {
            $("#inputFirstName").removeClass('error');
            $("#inputFirstLastName").removeClass('error');
            $("#inputSecondtLastName").removeClass('error');
            $("#inputEmail").removeClass('error');
            $("#inputUserName").removeClass('error');
            $("#inputPassword1").removeClass('error');
            $("#inputPassword2").removeClass('error');
        }

        function validateInputUser(id, message) {
            let element = document.getElementById(id);
            if (!element.checkValidity()) {
                newAlert(element, "VALIDACIÓN", message);
                InputError(element);
            return false;
            }
            return true;
        }




        function validarUsuarioIns() {

            var firstName = $("#inputFirstName").val();
            var firstLastName = $("#inputFirstLastName").val();
            var secondLastName = $("#inputSecondtLastName").val();
            var email = $("#inputEmail").val();
            var username = $("#inputUserName").val();
            var passwordOne = $("#inputPassword1").val();
            var passwordTwo = $("#inputPassword1").val();

            return (
                validarNombreUsuarioFrm(username) &
                validarNombreFrm(firstName) &
                validarApellidoPaternoFrm(firstLastName) &
                validarApellidoMaternoFrm(secondLastName) &
                validarEmailFrm(email) &
                validarPasswordFrm(passwordOne) &
                validarPasswordIgualesFrm(passwordOne, passwordTwo)
            );
        }

         function validarUsuarioUpd() {

            var firstName = $("#inputFirstName").val();
            var firstLastName = $("#inputFirstLastName").val();
            var secondLastName = $("#inputSecondtLastName").val();
            var email = $("#inputEmail").val();
            var username = $("#inputUserName").val();
            var passwordOne = $("#inputPassword1").val();
            var passwordTwo = $("#inputPassword1").val();

            return (
                validarNombreUsuarioFrm(username) &
                validarNombreFrm(firstName) &
                validarApellidoPaternoFrm(firstLastName) &
                validarApellidoMaternoFrm(secondLastName) &
                validarEmailFrm(email)               
            );
        }



        function validarEmail(email) {

            var formato = /^([a-zA-Z0-9_\.\-])+\u0040(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+$/;
            email = email.replace(/\+/g, '\+');

            mostrarValidacion('#inputEmail', formato.test(email));
        }

        function validarNombreUsuario(nombreUsuario) {

            var formato = /^[a-zA-Z0-9_-]{4,15}$/;
            nombreUsuario = nombreUsuario.replace(/\+/g, '\+');

            mostrarValidacion('#inputUserName', formato.test(nombreUsuario));
        }

        function validarNombre(nombre) {

            var formato = /^[a-zA-Z áéíóúüÁÉÍÓÜÚ]{3,15}$/;
            nombre = nombre.replace(/\+/g, '\+');

            mostrarValidacion('#inputFirstName', formato.test(nombre) );
        }

        function validarApellidoPaterno(apellidos) {

            var formato = /^[a-zA-Z áéíóúüÁÉÍÓÜÚ]{4,15}$/;
            apellidos = apellidos.replace(/\+/g, '\+');

            mostrarValidacion('#inputFirstLastName', formato.test(apellidos) );
        }

        function validarApellidoMaterno(apellidos) {

            var formato = /^[a-zA-Z áéíóúüÁÉÍÓÜÚ]{4,15}$/;
            apellidos = apellidos.replace(/\+/g, '\+');

            mostrarValidacion('#inputSecondtLastName', formato.test(apellidos) );
        }

        function validarPassword(pass) {
            pass = pass.replace(/\+/g, '\+');

            mostrarValidacion('#inputPassword1', pass.length >= 4);
        }

        function validarPasswordIguales(password, passwordRepetida) {
            password = password.replace(/\+/g, '\+');
            passwordRepetida = passwordRepetida.replace(/\+/g, '\+');

            mostrarValidacion('#inputPassword2', password.length >= 4 && password == passwordRepetida);
        }


        function validarNombreUsuarioFrm(usuario) {
            validarNombreUsuario(usuario);
            var regex = '/^[a-zA-Z0-9_-]{4,15}$/';
            return (usuario.match(regex));
        }

        function validarEmailFrm(email) {
            validarEmail(email);
            var regex ='/^([a-zA-Z0-9_\.\-])+\u0040(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+$';
            return (email.match(regex));
        }

        function validarNombreFrm(nombre) {
            validarNombre(nombre);
            var regex = '/^[a-zA-Z áéíóúüÁÉÍÓÜÚ]{4,15}$/';
            return ( (nombre.match(regex)));
        }

        function validarApellidoPaternoFrm(apellidos) {
            validarApellidoPaterno(apellidos);
            var regex ='/^[a-zA-Z áéíóúüÁÉÍÓÜÚ]{4,15}$/';
            return ((apellidos.match(regex)));
        }

        function validarApellidoMaternoFrm(apellidos) {
            validarApellidoMaterno(apellidos);
            var regex = '/^[a-zA-Z áéíóúüÁÉÍÓÜÚ]{4,15}$/';
            return ( (apellidos.match(regex)));
        }

        function validarPasswordFrm(password) {
            validarPassword(password);
            return (password.length >= 4);
        }

        function validarPasswordIgualesFrm(password, password2) {
            validarPasswordIguales(password, password2);
            return (password == password2);
        }




    </script>

}
